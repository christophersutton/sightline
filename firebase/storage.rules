rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Debug function to log access attempts
    function debug() {
      return {'auth': request.auth, 'resource': request.resource, 'metadata': request.resource.metadata};
    }
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Add bucket validation
    function isCorrectBucket() {
      return bucket == 'sightline-app-gauntlet.firebasestorage.app';
    }
    
    match /content/{fileName} {
      allow read: if isAuthenticated();
      allow write: if false;
    }
    
    match /processing/{placeId}/{filename} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
      allow delete: if false;
      allow update: if false;
    }

    // Add a catch-all rule to help debug
    match /{allPaths=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
